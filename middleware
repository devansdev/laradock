Before and after
 public function handle($request, Closure $next)
    {
        // Perform action

        return $next($request);
    }
public function handle($request, Closure $next)
    {
        $response = $next($request);

        // Perform action

        return $response;
    }

php artisan make:middleware Auth

Route::get('admin/profile', function () {
    //
})->middleware('auth');

Middleware Groups

protected $middlewareGroups = [
    'web' => [
        \App\Http\Middleware\EncryptCookies::class,
        \Illuminate\Cookie\Middleware\AddQueuedCookiesToResponse::class,
        \Illuminate\Session\Middleware\StartSession::class,
        \Illuminate\View\Middleware\ShareErrorsFromSession::class,
        \App\Http\Middleware\VerifyCsrfToken::class,
        \Illuminate\Routing\Middleware\SubstituteBindings::class,
    ],

    'api' => [
        'throttle:60,1',
        'auth:api',
    ],
];

Route::get('/', function () {
    //
})->middleware('web');

Route::group(['middleware' => ['web']], function () {
    //
});

parameters

public function handle($request, Closure $next, $role)

Route::put('post/{id}', function ($id) {
    //
})->middleware('role:editor');

terminate after handling the request
public function terminate($request, $response)
